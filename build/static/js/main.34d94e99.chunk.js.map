{"version":3,"sources":["components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/movieForm.jsx","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/rentals.jsx","components/customers.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","name","label","error","rest","className","htmlFor","id","Select","options","value","map","option","key","_id","Form","state","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","this","onChange","type","Component","init","log","console","axios","defaults","baseURL","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","getMovie","movieId","http","saveMovie","movie","body","deleteMovies","getGenres","MovieForm","title","genreId","numberInStock","dailyRentalRate","genres","string","required","min","max","a","props","history","push","match","params","mapToViewModel","replace","populateGenres","populateMovie","genre","onSubmit","renderInput","renderSelect","renderButton","Pagination","itemCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","page","onClick","paginate","items","pageNumber","startIndex","slice","take","ListGroup","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","email","password","localStorage","setItem","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","Like","classes","liked","aria-hidden","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","column","columns","lable","TableBody","renderCell","content","createKey","Table","MoviesTable","Link","to","onLike","deleteColumn","onDelete","user","auth","isAdmin","movies","SearchBox","placeholder","Movies","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSort","getpagedData","allMovies","filtered","toLowerCase","startsWith","sorted","orderBy","totalCount","length","handleSearch","query","Fragment","style","marginBottom","Rentals","Customers","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","LoginForm","username","location","window","from","pathname","Redirect","register","RegisterForm","userService","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.34d94e99.chunk.js","sourcesContent":["import React from 'react';\r\nconst Input = ({name,label,error,...rest}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                {...rest}\r\n                id={name} \r\n                name={name}\r\n                className=\"form-control\"/>\r\n            {error&& <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\nconst Select = ({name,label,options,error,...rest}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n                <select name={name} id={name} {...rest} className=\"form-control\">\r\n                 <option value=\"\"/>\r\n                 {options.map(option=>(\r\n                     <option key={option._id} value={option._id}>\r\n                      {option.name}\r\n                     </option>\r\n                 ))}          \r\n                </select>\r\n            {error &&<div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nclass Form extends Component {\r\n    state = { \r\n        data:{},\r\n        errors:{}\r\n    };\r\n    validate=()=>{\r\n        const options={abortEarly:false};\r\n        const {error}=Joi.validate(this.state.data,this.schema,options);\r\n        if(!error)return null;\r\n        const errors={};\r\n        for(let item of error.details)\r\n            errors[item.path[0]]=item.message;\r\n        return errors;        \r\n    };\r\n    validateProperty=({name,value})=>{\r\n        const obj={[name]:value};\r\n        const schema={[name]:this.schema[name]};\r\n        const {error}=Joi.validate(obj,schema);\r\n        return error?error.details[0].message:null;\r\n\r\n    };\r\n    handleSubmit=e=>{\r\n        e.preventDefault();\r\n        const errors=this.validate();\r\n        this.setState({errors:errors||{}});\r\n        if(errors)return;\r\n        this.doSubmit();\r\n    };\r\n    handleChange= ({currentTarget:input})=>{\r\n        const errors={...this.state.errors};\r\n        const errorMessage=this.validateProperty(input);\r\n        if(errorMessage) errors[input.name]=errorMessage;\r\n        else delete errors[input.name];\r\n        const data={...this.state.data};\r\n        data[input.name]=input.value;\r\n        this.setState({data,errors});\r\n    };\r\n    renderButton(label){\r\n        return <button \r\n        disabled={this.validate()}\r\n        className=\"btn btn-primary\">{label}</button>;\r\n    };\r\n    renderSelect(name,label,options){\r\n        const {data,errors}=this.state;\r\n        return (\r\n        <Select\r\n           name={name}\r\n           value={data[name]}\r\n           label={label}\r\n           options={options}\r\n           onChange={this.handleChange}\r\n           error={errors[name]}\r\n        />\r\n        );\r\n    };\r\n    renderInput(name,label,type='text'){\r\n        const {data,errors}=this.state;\r\n        return <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n       />;\r\n    }\r\n}\r\n \r\nexport default Form;","// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\n//axios.defaults.baseURL=process.env.REACT_APP_API_URL;\naxios.defaults.baseURL=\"https://charan-movies-project1.herokuapp.com/api\";\n//axios.defaults.baseURL=\"https://intense-citadel-32029.herokuapp.com/api\"\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\nfunction setJwt(jwt){\n  axios.defaults.headers.common['x-auth-token']=jwt;\n}\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from './httpService';\r\n\r\n\r\nconst apiEndpoint=\"/movies\";\r\nfunction movieUrl(id){\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\nexport function getMovies(){\r\n    return http.get(apiEndpoint);\r\n};\r\nexport function getMovie(movieId){\r\n    return http.get(movieUrl(movieId));\r\n};\r\nexport function saveMovie(movie){\r\n    if(movie._id){\r\n        const body={...movie};\r\n        console.log(body);\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id),body);\r\n    }\r\n    return http.post(apiEndpoint,movie);\r\n};\r\nexport function deleteMovies(movieId){\r\n    return http.delete(movieUrl(movieId));\r\n};","import http from './httpService';\r\nexport function getGenres(){\r\n    return http.get(\"/genres\");\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovies,getMovie,saveMovie } from './../services/movieService';\r\nimport { getGenres } from './../services/genreService';\r\nclass MovieForm extends Form {\r\n    state={\r\n        data:{\r\n            title:\"\",\r\n            genreId:\"\",\r\n            numberInStock:\"\",\r\n            dailyRentalRate:\"\"\r\n        },\r\n        genres:[],\r\n        errors:{}\r\n    };\r\n    schema={\r\n        _id:Joi.string(),\r\n        title:Joi.string().required().label(\"Title\"),\r\n        genreId:Joi.string().required().label(\"Genre\"),\r\n        numberInStock:Joi.string().required().min(0).max(100).label(\"Number In Stock\"),\r\n        dailyRentalRate:Joi.string().required().min(0).max(10).label(\"Daily Rental Rate\")\r\n    };\r\n    async populateGenres(){\r\n        const {data:genres}=await getGenres();\r\n        this.setState({genres});\r\n    }\r\n    async populateMovie(){        \r\n        try{\r\n            const movieId=this.props.match.params.id;\r\n            if(movieId===\"new\")return;\r\n\r\n            const {data:movie}=await getMovie(movieId);\r\n            this.setState({data:this.mapToViewModel(movie)});\r\n        }\r\n        catch(ex){\r\n            if(ex.response&&ex.response.status===404)\r\n             this.props.history.replace(\"/not-found\");\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        await this.populateGenres();\r\n        await this.populateMovie();      \r\n    };\r\n    mapToViewModel(movie){\r\n        return {            \r\n            _id:movie._id,\r\n            title:movie.title,\r\n            genreId:movie.genre._id,\r\n            numberInStock:movie.numberInStock,\r\n            dailyRentalRate:movie.dailyRentalRate\r\n        };\r\n    };\r\n    doSubmit =async ()=>{\r\n        await saveMovie(this.state.data);\r\n        this.props.history.push(\"/movies\");\r\n    };\r\n    \r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('title','Title')}\r\n                    {this.renderSelect('genreId','Genre',this.state.genres)}\r\n                    {this.renderInput('numberInStock','Number In Stock',\"number\")}                    \r\n                    {this.renderInput('dailyRentalRate','Rate')}\r\n                    {this.renderButton('Save')}\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n} \r\n \r\nexport default MovieForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n    const {itemCount,pageSize,currentPage,onPageChange}=props;\r\n    const pageCount=Math.ceil(itemCount/pageSize);\r\n    if(pageCount===1)return null;\r\n    const pages = _.range(1,pageCount+1);\r\n    return ( \r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map(page =>(\r\n                    <li key={page}\r\n                     className={page===currentPage?\"page-item active\":\"page-item\"}>\r\n                    <a \r\n                      className=\"page-link\"\r\n                      onClick={()=>onPageChange(page)}>{page}</a></li>\r\n                )) }\r\n                \r\n            </ul>\r\n        </nav>\r\n     );\r\n};\r\n Pagination.propTypes={\r\n    itemCount:PropTypes.number.isRequired,\r\n    pageSize:PropTypes.number.isRequired,\r\n    currentPage:PropTypes.number.isRequired,\r\n    onPageChange:PropTypes.func.isRequired\r\n }\r\nexport default Pagination;","import _ from \"lodash\";\r\nexport function paginate(items,pageNumber,pageSize){\r\n    const startIndex=(pageNumber-1)*pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();  \r\n}","import React from 'react';\r\n\r\nconst ListGroup = (props) => {\r\n    const {items,textProperty,valueProperty,selectedItem,onItemSelect}=props;\r\n    return ( \r\n        <ul className=\"list-group\">\r\n            {items.map(item=>(\r\n                <li \r\n                key={item[valueProperty]} \r\n                onClick={()=>onItemSelect(item)}\r\n                className={\r\n                    item===selectedItem? \"list-group-item active\":\"list-group-item\"\r\n                    }>\r\n                    {item[textProperty]}\r\n                </li>\r\n            ))}\r\n            \r\n        </ul>\r\n     );\r\n}\r\n ListGroup.defaultProps={\r\n     textProperty:'name',\r\n     valueProperty:\"_id\"\r\n };\r\nexport default ListGroup;","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\n\r\nconst apiEndpoint=\"/auth\";\r\nconst tokenKey=\"token\";\r\n\r\nhttp.setJwt(getJwt(tokenKey));\r\n\r\nexport async function login(email,password){\r\n    const {data:jwt}=await http.post(apiEndpoint,{email,password});\r\n    localStorage.setItem(tokenKey,jwt);\r\n}\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey,jwt);\r\n}\r\nexport function logout(){\r\n    localStorage.removeItem(tokenKey);\r\n}\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt=localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);        \r\n      }\r\n      catch(ex){\r\n          return null;\r\n      }\r\n}\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenKey);\r\n}\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt\r\n}","import React from 'react';\r\nconst Like = props => {\r\n    let classes=\"fa fa-heart\";\r\n    if(!props.liked)classes+=\"-o\";\r\n    return (         \r\n            <i \r\n             onClick={props.onClick}\r\n             className={classes} aria-hidden=\"true\"></i>\r\n         );\r\n}\r\n \r\nexport default Like;\r\n\r\n ","import React, { Component } from 'react';\r\nclass TableHeader extends Component {\r\n    raiseSort=path=>{\r\n        const sortColumn={...this.props.sortColumn};\r\n        if(sortColumn.path===path){\r\n            sortColumn.order=sortColumn.order==='asc'?'desc':'asc';\r\n        }\r\n        else{\r\n            sortColumn.path=path;\r\n            sortColumn.order='asc';\r\n        }\r\n        this.props.onSort(sortColumn);\r\n    };\r\n    renderSortIcon =column=>{\r\n        const {sortColumn}=this.props;\r\n        if(column.path!==sortColumn.path)return null;\r\n        if(sortColumn.order==='asc')\r\n         return <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\r\n         return <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\r\n    };\r\n    render() { \r\n        const {columns}=this.props;\r\n        return ( \r\n        <thead>\r\n            <tr>\r\n                {\r\n                  columns.map(column=>\r\n                    <th className=\"clickable\"\r\n                       key={column.path||column.key}\r\n                       onClick={()=>this.raiseSort(column.path)}>\r\n                      {column.lable}{this.renderSortIcon(column)}\r\n                    </th>\r\n                )}\r\n                \r\n            </tr>\r\n        </thead> );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nclass TableBody extends Component {\r\n    renderCell=(item,column)=>{\r\n        if(column.content)return column.content(item);\r\n        return _.get(item,column.path);\r\n    };\r\n    createKey=(item,column)=>{\r\n        return item._id+(column.path||column.key);\r\n    };\r\n    render() { \r\n        const {data,columns}=this.props;\r\n        return ( \r\n            <tbody>\r\n            {data.map((item) => (\r\n              <tr key={item._id}>\r\n                {\r\n                  columns.map(column => <td key={this.createKey(item,column)}>\r\n                      {this.renderCell(item,column)}</td>)\r\n                }\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\nconst Table = ({data,onSort,sortColumn,columns}) => {\r\n    return ( \r\n        <table className=\"table\">\r\n          <TableHeader\r\n           columns={columns}\r\n           sortColumn={sortColumn}\r\n           onSort={onSort}\r\n          />\r\n          <TableBody\r\n           data={data}\r\n           columns={columns}\r\n          />\r\n          \r\n        </table>\r\n     );\r\n}\r\n \r\nexport default Table;","import React,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../services/authService';\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns=[\r\n    {\r\n      path:\"title\",\r\n      lable:\"Title\",\r\n    content:movie=><Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    {path:\"genre.name\",lable:\"Genre\"},\r\n    {path:\"numberInStock\",lable:\"Stock\"},\r\n    {path:\"dailyRentalRate\",lable:\"Rate\"},\r\n    {\r\n      key:\"like\",\r\n      content: movie=><Like onClick={() => this.props.onLike(movie)} liked={movie.liked}></Like>  \r\n    }\r\n  ];\r\n  deleteColumn={\r\n    key:\"delete\",\r\n    content:movie=>\r\n      <button\r\n        className=\"btn btn-danger btn-sm\"\r\n        onClick={() => this.props.onDelete(movie)}\r\n      >\r\n      Delete\r\n      </button>\r\n  }\r\n  constructor(){\r\n    super();\r\n    const user=auth.getCurrentUser();\r\n    if(user&&user.isAdmin)\r\n     this.columns.push(this.deleteColumn);\r\n  }\r\n  render() { \r\n    const {movies,onSort,sortColumn}=this.props;\r\n    return ( \r\n      <Table \r\n       columns={this.columns}\r\n       data={movies}\r\n       onSort={onSort}\r\n       sortColumn={sortColumn}\r\n      />\r\n  );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;","import React from 'react';\r\nconst SearchBox = ({value,onChange}) => {\r\n    return ( \r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          className=\"form-control my-3\"\r\n          placeholder=\"Search...\"\r\n          value={value}\r\n          onChange={e=>onChange(e.currentTarget.value)}\r\n        />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n//import NavBar from \"./navBar\";\r\nimport { getMovies ,deleteMovies} from \"../services/movieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport {paginate} from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport {getGenres} from \"../services/genreService\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from 'lodash';\r\nimport SearchBox from \"./searchBox\";\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres:[],\r\n    currentPage:1,\r\n    pageSize:6,\r\n    searchQuery:\"\",\r\n    selectedGenre:null,\r\n    sortColumn:{path:'title',order:'asc'}\r\n  };\r\n  async componentDidMount(){\r\n    const {data}= await getGenres();\r\n    const genres=[{_id:'',name:'All genres'}, ...data];\r\n    const {data:movies}=await getMovies();\r\n    //console.log(data,movies);\r\n    this.setState({ genres,movies })\r\n    //console.log(this.state);\r\n  };\r\n\r\n  handleDelete =async (movie) => {\r\n    const originalMovies=this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try{\r\n      await deleteMovies(movie._id);\r\n    }\r\n    catch(ex){\r\n      if(ex.response &&ex.response.status===404)\r\n       toast.error('This movie has already been deleted');\r\n      this.setState({movies:originalMovies});\r\n    }\r\n  };\r\n  handleLike =(movie)=>{\r\n      const movies=[...this.state.movies];\r\n      const index=movies.indexOf(movie);\r\n      movies[index]={...movie};\r\n      movies[index].liked=(movie.liked)?false:true;\r\n      this.setState({movies});\r\n  };\r\n  handlePageChange=page=>{\r\n      this.setState({currentPage:page});\r\n  };\r\n  handleGenreSelect =genre=>{\r\n      this.setState({selectedGenre:genre,searchQuery:\"\",currentPage:1});\r\n  };\r\n  handleSort = sortColumn=>{\r\n      this.setState({sortColumn});\r\n  };\r\n  getpagedData=()=>{\r\n    const { \r\n        pageSize, \r\n        currentPage,\r\n        selectedGenre, \r\n        movies:allMovies,\r\n        sortColumn,\r\n        searchQuery\r\n    } =this.state;\r\n    let filtered=allMovies;\r\n    if(searchQuery){\r\n      filtered=allMovies.filter(m=>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n    else if(selectedGenre && selectedGenre._id)\r\n      filtered=allMovies.filter(m=>m.genre._id===selectedGenre._id)\r\n    const sorted=_.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\r\n    const movies=paginate(sorted,currentPage,pageSize);\r\n    return {totalCount:sorted.length,data:movies};\r\n  };\r\n  handleSearch=query=>{\r\n    this.setState({searchQuery:query,selectedGenre:null,currentPage:1});\r\n  };\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage,sortColumn} =this.state;\r\n    const { user }=this.props;\r\n    //if (count === 0) return <p>There are No movies in databases</p>;\r\n    const {totalCount,data:movies}=this.getpagedData();\r\n    \r\n    return (\r\n      <React.Fragment>\r\n      \r\n       <div className=\"row\">\r\n        <div className=\"col-3\">\r\n            <ListGroup \r\n            items={this.state.genres} \r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect} />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user&&\r\n          <Link\r\n            to=\"/movies/new\"\r\n            className=\"btn btn-primary\"\r\n            style={{marginBottom:20}}>\r\n            New Movie\r\n          </Link>\r\n          }\r\n          \r\n        <p>There are {totalCount} movies in the databases.</p>\r\n        <SearchBox value={this.state.searchQuery} onChange={this.handleSearch} />\r\n        <MoviesTable\r\n           movies={movies}\r\n           sortColumn={sortColumn}\r\n           onLike={this.handleLike}\r\n           onDelete={this.handleDelete}\r\n           onSort={this.handleSort}\r\n        />\r\n        <Pagination \r\n          itemCount={totalCount} \r\n          pageSize={pageSize} \r\n          onPageChange={this.handlePageChange}\r\n          currentPage={currentPage} />\r\n          </div>        \r\n      </div>\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nconst Rentals = () => {\r\n    return ( \r\n        <h1>Rentals</h1>\r\n     );\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\nconst Customers = () => {\r\n    return ( \r\n        <h1>Customers</h1>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\nconst NotFound = () => {\r\n    return ( \r\n        <h1>NotFound</h1>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nconst NavBar = ({user}) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link active\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user&&\r\n          <React.Fragment>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n            Login\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n            Register\r\n            </NavLink>\r\n          </React.Fragment>\r\n          }\r\n          {user&&\r\n          <React.Fragment>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n            {user.name}\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n            Logout\r\n            </NavLink>\r\n          </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\n\r\n\r\nclass LoginForm extends Form {\r\n    state={\r\n        data:{username:'',password:''},\r\n        errors:{}\r\n    };\r\n    schema={\r\n        username:Joi.string().required().label('Username'),\r\n        password:Joi.string().required().label('Password')\r\n    };\r\n    \r\n    doSubmit =async ()=>{\r\n        try{\r\n            const {data}=this.state;\r\n            await auth.login(data.username,data.password);\r\n            const {state}=this.props.location;\r\n            //console.log(state,this.props);\r\n            window.location=state?state.from.pathname:'/';\r\n        }\r\n        catch(ex){\r\n            if(ex.response&&ex.response.status===400){\r\n                const errors={...this.state.errors};\r\n                errors.username=ex.response.data;\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    render() { \r\n        if(auth.getCurrentUser())return <Redirect to='/'/>;\r\n        return ( \r\n            <div>\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username','Username')}\r\n                    {this.renderInput('password','Password','password')}\r\n                    {this.renderButton('Login')}\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n} \r\n \r\nexport default LoginForm;","import http from './httpService';\r\n\r\n\r\nconst apiEndpoint=\"/users\";\r\n\r\nexport function register(user){\r\n    return http.post(apiEndpoint,{\r\n        email:user.username,\r\n        password:user.password,\r\n        name:user.name\r\n    });\r\n};\r\n\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport * as userService from '../services/userService';\r\nimport auth from '../services/authService';\r\nclass RegisterForm extends Form {\r\n    state={\r\n        data:{username:'',password:'',name:''},\r\n        errors:{}\r\n    };\r\n    schema={\r\n        username:Joi.string().required().email().label('Username'),\r\n        password:Joi.string().required().min(5).label('Password'),\r\n        name:Joi.string().required().label('Name')\r\n    };\r\n    \r\n    doSubmit =async ()=>{\r\n        try{\r\n            const response=await userService.register(this.state.data);\r\n            auth.loginWithJwt(response.headers['x-auth-token']);\r\n            window.location='/';\r\n        }\r\n        catch(ex){\r\n            console.log(ex.response);\r\n            if(ex.response&&ex.response.status===400){\r\n                const errors={...this.state.errors};\r\n                errors.username=ex.response.data;\r\n                this.setState({errors});\r\n            }\r\n        }\r\n        \r\n    };\r\n    \r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username','Username')}\r\n                    {this.renderInput('password','Password','password')}\r\n                    {this.renderInput('name','Name')}\r\n                    {this.renderButton('Register')}\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n} \r\n \r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        auth.logout();\r\n        window.location='/';\r\n    }\r\n    render() { \r\n        return  null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport auth from \"../../services/authService\";\r\nconst ProtectedRoute = ({path,component:Component,render,...rest}) => {\r\n    return ( \r\n        <Route\r\n         {...rest}\r\n         render ={props=>{\r\n             if(!auth.getCurrentUser())return <Redirect \r\n               to={{\r\n                   pathname:'/login',\r\n                   state:{from:props.location}\r\n               }}\r\n              />;\r\n             return Component ?<Component {...props}/>:render(props);\r\n         }}\r\n        />\r\n     );\r\n}\r\n \r\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport {ToastContainer} from 'react-toastify';\nimport MovieForm from './components/movieForm';\nimport Movies from \"./components/movies\";\nimport Rentals from './components/rentals';\nimport Customers from './components/customers';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  state = {}\n  componentDidMount(){\n    const user=auth.getCurrentUser();\n    this.setState({user});\n  }\n  render() { \n    const {user}=this.state;\n    return ( \n      <React.Fragment>\n        <ToastContainer/>\n        <NavBar user={user}/>\n         <main className=\"container\">\n        <Switch>\n          <Route path=\"/register\" component={RegisterForm}></Route>\n          <Route path=\"/login\" component={LoginForm}></Route>\n          <Route path=\"/logout\" component={Logout}></Route>\n          <ProtectedRoute path=\"/movies/:id\" component={MovieForm}/>\n          <Route \n            path=\"/movies\" \n            render={props=><Movies {...props} \n            user={this.state.user} />}>\n          </Route>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\"/>\n        </Switch>\n        \n      </main>\n      </React.Fragment>\n      \n     );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n<BrowserRouter>\n  <App/>\n</BrowserRouter>,\n  document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}